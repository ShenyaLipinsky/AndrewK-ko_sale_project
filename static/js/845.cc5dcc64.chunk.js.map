{"version":3,"file":"static/js/845.cc5dcc64.chunk.js","mappings":"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","sources":["components/Pages/Home/SliderHomePage.styled.js","components/Pages/Home/SliderHomePageItem.styled.js","components/Pages/Home/SliderHomePageitem.js","components/Pages/Home/SliderHomePage.js","components/Pages/Home/Home.js","components/services/API-Pixabay.js"],"sourcesContent":["import styled from 'styled-components';\n// import { Carousel } from 'react-responsive-carousel';\nimport Carousel from 'react-multi-carousel';\n\n// export const SliderCarousel = styled(Carousel)`\n//   display: flex;\n//   justify-content: center;\n//   background-color: ${p => p.theme.colors.secondary};\n//   padding: ${p => p.theme.space[3]}px;\n//   & li {\n//     display: flex;\n//     justify-content: center;\n//   }\n// `;\nexport const SliderContainer = styled.div`\n  position: relative;\n`;\nexport const SliderLink = styled.a`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\nexport const CarouselStyled = styled(Carousel)`\n  & ul {\n    display: flex;\n    align-items: center;\n    max-height: 150px;\n    & li {\n      margin: 0 5px;\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: ${p => p.theme.colors.text};\n  text-decoration: underline;\n\n  &.active {\n    color: ${p => p.theme.colors.secondaryText};\n  }\n`;\nexport const NavItem = styled.li`\n  width: 230px;\n\n  :hover {\n    zoom: 103%;\n  }\n`;\n","import { FilmImage } from 'components/Pages/FilmDetails/FilmDetails.styled';\nimport propTypes from 'prop-types';\nimport { Box } from '../../Box';\nimport { NavItem, NavLink } from './SliderHomePageItem.styled';\n\nconst SliderHomePageItem = ({ data, moreDetails, location }) => {\n  const posterPath = `https://image.tmdb.org/t/p/w500/`;\n  return (\n    <Box\n      as=\"ul\"\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(5, 1fr)\"\n      gridAutoRows=\"180px\"\n      justifyItems=\"center\"\n      p={3}\n    >\n      {data.map(({ backdrop_path, id, original_title, name }) => {\n        return (\n          <NavItem key={id}>\n            <NavLink\n              to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n              onClick={() => moreDetails(id)}\n            >\n              <FilmImage src={`${posterPath}${backdrop_path}`} alt=\"poster\" />\n              {original_title || name}\n            </NavLink>\n          </NavItem>\n        );\n      })}\n    </Box>\n  );\n};\nSliderHomePageItem.propTypes = {\n  moreDetails: propTypes.func.isRequired,\n  data: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string,\n      name: propTypes.string,\n    })\n  ),\n};\n\nexport default SliderHomePageItem;\n","import fetchImages from 'components/services/API-Pixabay';\nimport React, { Component } from 'react';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport {\n  CarouselStyled,\n  // SliderCarousel,\n  SliderContainer,\n  // SliderLink,\n} from './SliderHomePage.styled';\nimport 'react-multi-carousel/lib/styles.css';\nimport { NavLink } from 'react-router-dom';\nimport SliderHomePageItem from './SliderHomePageitem';\nconst responsive = {\n  superLargeDesktop: {\n    // the naming can be any, depends on you.\n    breakpoint: { max: 4000, min: 3000 },\n    items: 7,\n    slidesToSlide: 1,\n    partialVisibilityGutter: 40,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 5,\n    slidesToSlide: 1,\n    partialVisibilityGutter: 40,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 3,\n    slidesToSlide: 1,\n    partialVisibilityGutter: 20,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 2,\n    slidesToSlide: 1,\n    partialVisibilityGutter: 10,\n  },\n};\nexport default class SliderHomePage extends Component {\n  state = {\n    hits: [],\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n    if (data.length > 0) {\n      this.setState({ hits: data });\n    } else {\n      fetchImages().then(res => {\n        this.setState({ hits: [...res] });\n      });\n    }\n    console.log(this.props);\n    console.log(this.state);\n  }\n\n  render() {\n    const { moreDetails, location } = this.props;\n    const posterPath = `https://image.tmdb.org/t/p/w500/`;\n\n    return (\n      <>\n        {/* <SliderCarousel\n          autoPlay=\"true\"\n          infiniteLoop={true}\n          showThumbs={false}\n          width=\"25%\"\n          showStatus={false}\n          showIndicators={false}\n          interval={5000}\n        > */}\n        <CarouselStyled\n          swipeable={true}\n          draggable={true}\n          // showDots={true}\n          responsive={responsive}\n          ssr={true} // means to render carousel on server-side.\n          // infinite={true}\n          autoPlay={this.props.deviceType !== 'mobile' ? true : false}\n          autoPlaySpeed={5000}\n          keyBoardControl={true}\n          customTransition=\"transform 5000ms cubic-bezier(0, 0, 0, 0) 0s\"\n          // transitionDuration={2000}\n          containerClass=\"carousel-container\"\n          rewind={true}\n          rewindWithAnimation={true}\n          removeArrowOnDeviceType={['tablet', 'mobile']}\n          deviceType={this.props.deviceType}\n          // dotListClass=\"custom-dot-list-style\"\n          // centerMode={true}\n          focusOnSelect={true}\n          itemClass=\"carousel-item-padding-40-px\"\n        >\n          {this.state.hits.length > 0 &&\n            this.state.hits.map(\n              ({ backdrop_path, id, original_title, name }) => {\n                return (\n                  <SliderContainer key={id}>\n                    <NavLink\n                      to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n                      state={{ from: location }}\n                      onClick={() => moreDetails(id)}\n                    >\n                      <SliderHomePageItem\n                        src={`${posterPath}${backdrop_path}`}\n                        alt=\"poster\"\n                      />\n                      {original_title || name}\n                    </NavLink>\n                  </SliderContainer>\n                );\n              }\n            )}\n        </CarouselStyled>\n        {/* </SliderCarousel> */}\n      </>\n    );\n  }\n}\n","// import MainPage from 'components/MainPage/MainPage';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Box } from '../../Box';\nimport { fetchMovieById, fetchMovies } from '../../services/API-MovieDB';\nimport SliderHomePage from './SliderHomePage';\n\nconst Home = () => {\n  const [hits, setHits] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovieData() {\n      try {\n        const movies = await fetchMovies();\n        setHits(movies.results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovieData();\n    return;\n  }, []);\n\n  return (\n    <Box as=\"main\" gridTemplateRows=\"auto 1fr\" p={2}>\n      <Box as=\"h2\" p={3}>\n        Trending today\n      </Box>\n      {/* <MainPage data={hits} moreDetails={fetchMovieById} location={location} /> */}\n      <SliderHomePage\n        data={hits}\n        moreDetails={fetchMovieById}\n        location={location}\n      />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default Home;\n","const axios = require('axios').default;\n\nconst URI = 'https://pixabay.com/api/';\nconst API_KEY = '27515696-8635174e5d1dc6e80848b95cf';\n\nasync function fetchImages(queue = 'war', page = 1) {\n  const response = await axios\n    .get(URI, {\n      params: {\n        q: queue,\n        page: page,\n        key: API_KEY,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        per_page: 12,\n      },\n    })\n    .then(response => {\n      let data = response.data.hits.map(item => {\n        let data = {\n          id: item.id,\n          webformatURL: item.webformatURL,\n          fullInfoLink: item.largeImageURL,\n        };\n        return data;\n      });\n      return data;\n    });\n  return response;\n}\n\nexport default fetchImages;\n"],"names":["SliderContainer","styled","CarouselStyled","Carousel","NavLink","Link","p","theme","colors","text","secondaryText","NavItem","data","moreDetails","location","Box","as","display","gridTemplateColumns","gridAutoRows","justifyItems","map","backdrop_path","id","original_title","name","to","pathname","state","from","onClick","src","alt","responsive","superLargeDesktop","breakpoint","max","min","items","slidesToSlide","partialVisibilityGutter","desktop","tablet","mobile","SliderHomePage","hits","this","props","length","setState","fetchImages","then","res","console","log","swipeable","draggable","ssr","autoPlay","deviceType","autoPlaySpeed","keyBoardControl","customTransition","containerClass","rewind","rewindWithAnimation","removeArrowOnDeviceType","focusOnSelect","itemClass","Component","useState","setHits","useLocation","useEffect","fetchMovies","movies","results","fetchMovieData","gridTemplateRows","fetchMovieById","Suspense","fallback","axios","require","URI","API_KEY","queue","page","get","params","q","key","image_type","orientation","per_page","response","item","webformatURL","fullInfoLink","largeImageURL"],"sourceRoot":""}